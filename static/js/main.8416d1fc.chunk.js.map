{"version":3,"sources":["canvas/canvas.jsx","canvas/Canvases.jsx","canvas/AppCanvas.jsx","serviceWorker.jsx","index.jsx"],"names":["appState","userPointsString","userPoints","canvasGeometry","xAxisRange","min","max","gridCellSize","OxyTranslated","x","y","xyPointsRanges","Infinity","xMinMax","yMinMax","FyRanges","tooltipTimeout","Fpoints","gridRendered","FpointsCalculated","funcExpression","fExpression","fExpressionPoints","lineParams","pointsRendered","graphRendered","OxySpan","ACG","graphColors","graphColorsIndex","gridContainer","canvas","ctx","canvasDots","ctxDots","canvasGrid","ctxGrid","canvasGraph","ctxGraph","canvasTopGraph","ctxTopGraph","commands","W","H","tooltip","marginL","marginT","GRID_COLUMNS","checkboxGrid","el","idStr","document","querySelector","slice","round","num","dec","fact","Math","pow","adjustRangesAndGridCells","Y","rx","ry","adjustGridMesh","cellSize","OyRange","floor","abs","renderGrid","renderPoints","renderFuncPoints","bezierCurve","points","lineWidth","color","f","step","prevP","a","b","ext","expand","p","length","j","strokeStyle","stroke","beginPath","moveTo","grad","dx1","dx2","dy1","dy2","nextP","psize","i","P","renderDot","bezierCurveTo","e","console","log","save","changeStudentName","sn","marko","innerText","classList","toggle","functionChanged","changed","replace","value","str","funcStr","split","eval","alert","funcExpressionPoints","fexp","fval","push","getPoints","upl","error","plist","setFyRanges","r","isOutsideOfCanvas","evt","clientX","window","scrollX","clientY","scrollY","onLoad","getContext","forEach","c","ix","arr","width","innerWidth","height","innerHeight","style","left","top","opacity","onResizeWindow","addEventListener","renderFuncPointOrGraph","body","showCoordinates","hideCoordinates","checked","userPointStringChanged","d","undefined","translate","arc","PI","fillStyle","fill","funcChanged","toggleGraphCanvas","setGridTemplates","innerHTML","m","target","match","renderFuncPolygon","globalCompositeOperation","gco","ctxTop","pts","renderPixelPolygon","renderOxy","clearRect","celldim","HH","WW","tx","ty","font","vRLines","lineTo","fillText","vLLines","hTLines","hBLines","toggleGrid","renderLinesCrossPoint","k2","b2","funcExp","k1","b1","t","tleft","ttop","ttip","cloneNode","tooltips","appendChild","renderLineByTwoPoints","elval","x1","y1","x2","y2","k","sgn","rhs","fexpr","Ox","Oy","oy","ox","diameter","vboolean","tt","toggleRenderPoints","delta","offsetLeft","offsetTop","backgroundColor","setTooltip","ctrlKey","time","setTimeout","repeate","s","gridStyle","gridTemplateColumns","gridTemplateRows","ceil","Canvases","props","className","id","pointsStringChanged","funcExpStringChanged","App","Fragment","onClick","htmlFor","type","placeholder","onChange","defaultValue","defaultChecked","ReactDOM","render","getElementById","Boolean","location","hostname","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8416d1fc.chunk.js","sourcesContent":["let appState = {\n\tuserPointsString: '',\n\tuserPoints: null,\n\tcanvasGeometry: {\n\t\txAxisRange: {\n\t\t\tmin: 0,\n\t\t\tmax: 0\n\t\t},\n\t\tgridCellSize: 0, // grid cell size\n\t\tOxyTranslated: {\n\t\t\tx: null,\n\t\t\ty: null\n\t\t}, // coordinate system begining\n\t\txyPointsRanges: {\n\t\t\tx: {\n\t\t\t\tmin: Infinity,\n\t\t\t\tmax: -Infinity\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tmin: Infinity,\n\t\t\t\tmax: -Infinity\n\t\t\t},\n\t\t\txMinMax: 0,\n\t\t\tyMinMax: 0\n\t\t},\n\t\tFyRanges: {\n\t\t\tmin: Infinity,\n\t\t\tmax: -Infinity,\n\t\t\tyMinMax: 0\n\t\t}\n\t},\n\ttooltipTimeout: false,\n\tFpoints: null,\n\tgridRendered: false,\n\tFpointsCalculated: false,\n\tfuncExpression: '', // user entered functoin string def, e.g. y(x) = 2*x*x - 3\n\tfExpression: null, // compiled string funcExpression above\n\tfExpressionPoints: null,\n\tlineParams: '', // keep Ctrl+Click 1st line exp to find cross point with Ctrl+Click 2nd one\n\tpointsRendered: false,\n\tgraphRendered: false\n};\nlet OxySpan = {\n\tx: {\n\t\tmin: null,\n\t\tmax: null\n\t},\n\ty: {\n\t\tmin: null,\n\t\tmax: null\n\t}\n};\nlet ACG = appState.canvasGeometry;\nlet graphColors = [ 'blue', 'green', 'red', 'magenta', 'navy', 'brown', 'orange' ];\nlet graphColorsIndex = 0;\nlet gridContainer;\nlet canvas, ctx;\nlet canvasDots, ctxDots;\nlet canvasGrid, ctxGrid;\nlet canvasGraph, ctxGraph;\nlet canvasTopGraph;\nlet ctxTopGraph;\nlet commands; // comands div to keep just below canvases dynamically\n// let w; // Oxy translate to the right of the canvas left side\n// let h; // Oxy translate down from the canvas top side\nlet W; // canvas full width dynamic\nlet H; // canvas full hight dynamic\nlet tooltip; // displays point coordinates on mouse down\n\n// let Fpoints = []; // x coord from userPoints used to calculate user entered func, e.g. y(x) = 2x+1\n\nlet marginL = 32; // canvas left margin\nlet marginT = 16; //canvas top margin\n\nlet GRID_COLUMNS = 10;\nlet checkboxGrid;\n\n// ------- UTILS ------------------------------------------------------------\nfunction el(idStr) {\n\tlet el = document.querySelector(idStr);\n\tif (idStr.slice(0, 7) === '#canvas') {\n\t\tel['id'] = idStr.slice(1);\n\t}\n\treturn el;\n}\n\nfunction round(num, dec) {\n\tlet fact = Math.pow(10, dec || 0);\n\treturn Math.round(num * fact) / fact;\n}\n// // creaate an emty object as avariable of a give name\n// function namedVar(name) {\n// \teval(name + '={}');\n// }\n// // turn varible name into  a string\n// const varName = (varObj) => Object.keys(varObj)[0];\n\n// function setACG() {\n// \t[ ctx, ctxDots, ctxGrid, ctxGraph ].forEach((c) => {\n// \t\tc['AG'] = JSON.parsse(JSON.stringify(ACG));\n// \t});\n// }\n// -------- end UTILS --------------------------------------------------------\n\n// keep xyPointsRanges and FRanges in sync for min and max values, used to render the grid\nfunction adjustRangesAndGridCells(x, y, Y) {\n\tlet rx = ACG.xyPointsRanges.x,\n\t\try = ACG.xyPointsRanges.y;\n\tif (rx.min > x) rx.min = x;\n\tif (rx.max < x) rx.max = x;\n\tif (ry.min > y) ry.min = y;\n\tif (ry.max < y) ry.max = y;\n\tACG.xyPointsRanges = {\n\t\tx: {\n\t\t\tmin: rx.min,\n\t\t\tmax: rx.max\n\t\t},\n\t\ty: {\n\t\t\tmin: ry.min,\n\t\t\tmax: ry.max\n\t\t}\n\t};\n}\n\nfunction adjustGridMesh() {\n\t// gridCellSize controls grid cell size to accomodate all Fpoints points\n\t// or userPoints if Fpoints are not rendered\n\tlet cellSize = Math.min(round(W / ACG.xyPointsRanges.xMinMax, 1), round(H / ACG.xyPointsRanges.yMinMax, 1));\n\tif (appState.FpointsCalculated) {\n\t\t// xMinMax is the same as for userPoints as they share x domain\n\t\tcellSize = Math.min(cellSize, H / OyRange());\n\t}\n\tif (cellSize < 10) {\n\t\tcellSize = 10;\n\t} else if (cellSize > 80) {\n\t\tcellSize = 80;\n\t} else {\n\t\tcellSize = Math.floor(cellSize); // whole pixel\n\t}\n\tif (ACG.gridCellSize !== cellSize) {\n\t\tACG.gridCellSize = cellSize;\n\n\t\t// divide width and height proportionally with lengths of negative and positive x,y ranges\n\t\tACG.OxyTranslated = {\n\t\t\tx: Math.round(W * Math.abs(ACG.xyPointsRanges.x.min) / ACG.xyPointsRanges.xMinMax),\n\t\t\t// y: Math.round(H * ACG.FyRanges.max / ACG.FyRanges.yMinMax) - cellSize\n\t\t\ty: Math.round(H + (Math.min(ACG.FyRanges.min, ACG.xyPointsRanges.y.min) - 1) * cellSize)\n\t\t};\n\t\trenderGrid();\n\t\t// renderGrid();\n\t\tif (ACG.pointsRendered) {\n\t\t\trenderPoints();\n\t\t}\n\t\tif (ACG.graphRendered) {\n\t\t\trenderFuncPoints();\n\t\t}\n\t}\n}\n\n// NOTE: solution from https://stackoverflow.com/questions/7054272/how-to-draw-smooth-curve-through-n-points-using-javascript-html5-canvas\nfunction bezierCurve(points, lineWidth, color, f, step) {\n\tfunction gradient(a, b) {\n\t\treturn (b.y - a.y) / (b.x - a.x);\n\t}\n\t// adjustGridMesh();\n\tlet ext = ACG.gridCellSize; //TODO\n\n\tfunction expand(p) {\n\t\treturn {\n\t\t\tx: ACG.OxyTranslated.x + p.x * ext,\n\t\t\ty: ACG.OxyTranslated.y - p.y * ext\n\t\t};\n\t}\n\t//\tf = 0, will be a straight line\n\t//\tstep suppose to be 1, but changing the value can control the smoothness too\n\tif (typeof f == 'undefined') f = 0.3;\n\tif (typeof step == 'undefined') step = 1;\n\n\tif (!color) {\n\t\tcolor = graphColors[graphColorsIndex++];\n\t\tgraphColorsIndex = graphColorsIndex % graphColors.length;\n\t}\n\t// two cycle rendering, ending fir with ctx.stroke and ctx.beginPath() using black color\n\t// 1st cycle renders a function graph in blue color\n\t// 2nd function renders dots over the graph with the hollow inside\n\n\t// translateToOxy(ctxGraph); // center graph if Oxy is not centered\n\tlet prevP;\n\tfor (let j = 0; j < 2; j++) {\n\t\tctxGraph.strokeStyle = color || 'black';\n\t\tctxGraph.lineWidth = lineWidth || 1;\n\t\t// set line params for the second loop\n\t\tif (j === 1) {\n\t\t\tctxGraph.stroke();\n\t\t\tctxGraph.beginPath();\n\t\t\tctxGraph.strokeStyle = 'black';\n\t\t\tctxGraph.lineWidth = 1;\n\t\t}\n\t\t// moveTo will abandons the previous rendering and will not close the curve\n\t\t// as it would if we do not start with ctxGraph.moveTo -- meaning it is a new beginning\n\t\tprevP = expand(points[0]);\n\t\tctxGraph.moveTo(prevP.x, prevP.y);\n\t\tlet grad = 0;\n\t\tlet dx1 = 0,\n\t\t\tdx2 = 0;\n\t\tlet dy1 = 0,\n\t\t\tdy2 = 0;\n\t\tlet nextP;\n\t\tlet psize = points.length;\n\t\tfor (let i = 1; i < psize; i++) {\n\t\t\ttry {\n\t\t\t\tlet P = expand(points[i]); // P is a curent point\n\t\t\t\tif (i + 1 < psize) {\n\t\t\t\t\tnextP = expand(points[i + 1]);\n\t\t\t\t}\n\t\t\t\tif (nextP) {\n\t\t\t\t\tgrad = gradient(prevP, nextP);\n\t\t\t\t\tdx2 = (nextP.x - P.x) * -f;\n\t\t\t\t\tdy2 = dx2 * grad * step;\n\t\t\t\t} else {\n\t\t\t\t\tdx2 = 0;\n\t\t\t\t\tdy2 = 0;\n\t\t\t\t}\n\t\t\t\tif (j === 1) {\n\t\t\t\t\trenderDot(ctxGraph, prevP, 0);\n\t\t\t\t} else {\n\t\t\t\t\tctxGraph.bezierCurveTo(prevP.x - dx1, prevP.y - dy1, P.x + dx2, P.y + dy2, P.x, P.y);\n\t\t\t\t}\n\t\t\t\tdx1 = dx2;\n\t\t\t\tdy1 = dy2;\n\t\t\t\tprevP = P;\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log('bezier loop: , e');\n\t\t\t}\n\t\t}\n\t}\n\trenderDot(ctxGraph, prevP, 0);\n\t//ctxGraph.arc(prevP.x, prevP.y, 2, 0, 2 * Math.PI);\n\tctxGraph.stroke();\n\tctxGraph.save();\n}\n\nexport const changeStudentName = () => {\n\tlet sn = el('.student-name');\n\tlet marko = sn.innerText[1] === 'a';\n\tsn.innerText = marko ? 'Mia Milutinovic' : 'Marko Milutinovic';\n\tsn.classList.toggle('mia');\n};\n\nfunction functionChanged() {\n\tlet changed = appState.funcExpression.replace(/\\s+/g, '') !== el('#funcExpression').value.replace(/\\s+/g, '');\n\tif (changed) {\n\t\tappState.FpointsCalculated = false;\n\t\tappState.Fpoints = null;\n\t}\n\treturn changed;\n}\n\n// for a given string expression, e.g. y(x) = 2(3x-4) return compiled expression for\n// evaluating function value for a given x variable value\nfunction funcExpression(str) {\n\tif (!str) {\n\t\tstr = appState.funcExpression = el('#funcExpression').value;\n\t}\n\tif (!str) {\n\t\treturn null;\n\t}\n\tlet fExpression;\n\tlet funcStr = str.split('=')[1]; // handle only right part, as formula should be y(x) = expression\n\t// turn 2x --> 2*x and 2(x+1) --> 2*(2+1)\n\tfuncStr = funcStr.replace(/(\\d+)x/g, '$1*x').replace(/(\\d+)\\(/g, '$1*(').replace(/xx/g, 'x*x');\n\n\ttry {\n\t\tfExpression = (x) => {\n\t\t\treturn eval(funcStr);\n\t\t};\n\t} catch (e) {\n\t\treturn alert('Function expression is incorrect\\nplease correct.');\n\t}\n\treturn (appState.fExpression = fExpression);\n\t// return fExpression;\n}\n\nfunction funcExpressionPoints() {\n\tconst points = [];\n\tlet x = OxySpan.x.min;\n\tlet y = OxySpan.y;\n\tfuncExpression();\n\tconst fexp = appState.fExpression;\n\twhile (x <= OxySpan.x.max) {\n\t\tlet fval = round(fexp(x), 3);\n\t\tif (fval >= y.min && fval <= y.max) {\n\t\t\tpoints.push({\n\t\t\t\tx: x,\n\t\t\t\ty: fval\n\t\t\t});\n\t\t}\n\t\tx += 0.1;\n\t}\n\treturn (appState.fExpressionPoints = points);\n}\n\n// points are not calculated for displaying in canvas, that is job of renderings\nfunction getPoints(fExpression) {\n\tlet upl = el('#pointsList').value;\n\tif (upl === appState.userPointsString && appState.FpointsCalculated) {\n\t\t// no changes in user points input string\n\t\treturn;\n\t}\n\tappState.pointsRendered = false;\n\tif (!fExpression) {\n\t\tappState.fExpression = funcExpression();\n\t}\n\n\tlet plist = upl.split(' ');\n\tconst points = [];\n\n\tlet error;\n\tappState.Fpoints = [];\n\tfor (let i = 0; i < plist.length; i++) {\n\t\tlet [ x, y ] = plist[i].split(',');\n\t\tlet Y = null;\n\t\t// do not change point coordinates that user entered in points box\n\t\tpoints.push({\n\t\t\tx: +x,\n\t\t\ty: +y\n\t\t});\n\n\t\t// but calculate function value on x and punt it into Fpoints\n\t\tif (appState.fExpression) {\n\t\t\ttry {\n\t\t\t\tY = round(appState.fExpression(x), 2);\n\t\t\t} catch (e) {\n\t\t\t\terror = true;\n\t\t\t}\n\n\t\t\tappState.Fpoints.push({\n\t\t\t\tx: +x,\n\t\t\t\ty: +Y\n\t\t\t});\n\t\t}\n\t\t// test min-max for current point and its\n\t\tadjustRangesAndGridCells(+x, +y, Y);\n\t}\n\tsetFyRanges(appState.fExpression);\n\tappState.userPoints = points;\n\tlet r = ACG.xyPointsRanges;\n\tr.xMinMax = round(+r.x.max - +r.x.min, 2);\n\tr.yMinMax = round(+r.y.max - +r.y.min, 2);\n\t// now for function values range\n\tr = ACG.FyRanges;\n\tr.yMinMax = round(r.max - r.min, 2);\n\tif (appState.fExpression) {\n\t\t// appState.Fpoints = Fpoints;\n\t\tappState.FpointsCalculated = true;\n\t}\n\tif (error) {\n\t\tconsole.log('fExpression calculation failed');\n\t\treturn;\n\t}\n\tappState.userPointsString = upl;\n\tadjustGridMesh();\n\n\treturn appState.userPoints;\n}\n\nfunction isOutsideOfCanvas(evt) {\n\t// return false;\n\tlet x = evt.clientX - marginL - window.scrollX;\n\tlet y = evt.clientY - marginT + window.scrollY;\n\treturn x <= 0 || x > W || y <= 0 || y > H;\n}\n\nexport const onLoad = () => {\n\tconsole.log(onLoad);\n\tcanvas = el('#canvas');\n\tcanvasDots = el('#canvasDots');\n\tcanvasGrid = el('#canvasGrid');\n\tcanvasGraph = el('#canvasGraph');\n\tcanvasTopGraph = el('#canvasTopGraph');\n\tctx = canvas.getContext('2d');\n\tctxDots = canvasDots.getContext('2d');\n\tctxGrid = canvasGrid.getContext('2d');\n\tctxGraph = canvasGraph.getContext('2d');\n\tctxTopGraph = canvasTopGraph.getContext('2d');\n\tctxGraph['tooltips'] = [];\n\t[ canvas, canvasDots, canvasGrid, canvasGraph, canvasTopGraph ].forEach((c, ix, arr) => {\n\t\tc.width = window.innerWidth - 2 * marginL;\n\t\tc.height = window.innerHeight;\n\t\tc.style.left = `${marginL}px`;\n\t\tc.style.top = `${marginT}px`;\n\t\tc.style.opacity = '1';\n\t\t// canvas and its ctx have the same id : canvasGraph.id. ctxGraph.id --> 'canvasGraph'\n\t});\n\t[ ctx, ctxDots, ctxGrid, ctxGraph ].forEach((c) => {\n\t\tc.lineWidth = 1;\n\t});\n\tcanvasTopGraph.style.opacity = '0';\n\tW = canvas.width;\n\tH = canvas.height;\n\n\t// w = Math.round(canvas.width / 2); // initially before user points and function points are accuired\n\t// h = Math.round(canvas.height / 2);\n\t// ACG.gridCellSize = Math.round(h / 20);\n\n\tcheckboxGrid = el('#checkboxGrid');\n\tcommands = el('#commands');\n\n\tgetPoints();\n\tonResizeWindow();\n\n\ttooltip = el('#tooltip');\n\tgridContainer = el('#gridContainer');\n\tgridContainer.addEventListener('click', renderFuncPointOrGraph);\n\n\t// el('#canvasGrid').addEventListener(\"mousedown\", showCoordinates);\n\t// el('#canvasGrid').addEventListener(\"mouseup\", hideCoordinates);\n\tdocument.body.addEventListener('mousedown', showCoordinates);\n\tdocument.body.addEventListener('mouseup', hideCoordinates);\n\twindow.addEventListener('resize', onResizeWindow);\n\n\t// renderOxy();\n\t// appState.actions.renderOxy = renderOxy;\n\tif (checkboxGrid.checked) {\n\t\trenderGrid();\n\t}\n\t// ctx.fillStyle = 'green';\n\t// // font: bold italic 15px/20px arial,sans-serif;\n\t// ctx.font = 'normal italic 16px/16px Georgia';\n\t// ctx.fillText('Marko Milutinovic', 20, 15);\n};\n\nfunction onResizeWindow(evt) {\n\t[ canvas, canvasDots, canvasGrid, canvasGraph ].forEach((c) => {\n\t\tc.width = Math.round(window.innerWidth - 2 * marginL);\n\t\tc.height = Math.round(window.innerHeight);\n\t\tc.style.left = `${marginL}px`;\n\t\tc.style.top = `${marginT}px`;\n\t});\n\n\tW = canvas.width;\n\tH = canvas.height;\n\n\t// w = Math.round(canvas.width / 2); // initially before user points and function points are accuired\n\t// h = Math.round(canvas.height / 2);\n\n\tif (appState.userPoints && userPointStringChanged()) {\n\t\t// if points entered we should adjust gridd cells for new Oxy range\n\t\tadjustGridMesh();\n\t}\n\t// else {\n\t// \tACG.gridCellSize = Math.round(canvas.width / 60); // initial only\n\t// }\n\n\t// move commands part below the canvas\n\tcommands.style.top = `${H + marginT}px`;\n\tcommands.style.left = `${marginL}px`;\n\tcommands.style.width = `${W}px`;\n}\n\nfunction OyRange() {\n\tlet oyRange = Math.floor(ACG.FyRanges.max - Math.min(ACG.xyPointsRanges.x.min, ACG.FyRanges.min));\n\treturn oyRange;\n}\n\nfunction renderDot(ctx, prevP, d) {\n\td = d === undefined ? 2 : d;\n\tctx.beginPath();\n\tctx.translate(-0.5, -0.5);\n\tctx.arc(prevP.x, prevP.y, d, 0, 2 * Math.PI);\n\tctx.fillStyle = 'white';\n\tctx.fill();\n\tctx.translate(0.5, 0.5);\n\tctx.stroke();\n}\n\n// render points for a function taking x-coordinate from user defined points\n// and caculate y-coordinate by getting compiled function expression from user\n// entered string, e.g. y(x) 2*x - 4\nexport const renderFuncPoints = () => {\n\tlet funcChanged = functionChanged();\n\tif (!userPointStringChanged() && !funcChanged) {\n\t\ttoggleGraphCanvas(true);\n\t\tif (appState.graphRendered) {\n\t\t\treturn;\n\t\t}\n\t}\n\tlet str = ''; // hold all points(x,y(x)) as <div> content to insert into grid\n\t// let val; // eval of the right side expression\n\n\t// if (funcChanged || !appState.FpointsCalculated) {\n\t// \tlet fexp = funcExpression();\n\t// \tif (!fexp) {\n\t// \t\treturn;\n\t// \t}\n\t// \tgetPoints(fexp); // fills both userPoints and Fpoints\n\t// }\n\n\t// F = []; // array of point objects, e.g. [ {x:x, y:y}, {x:x, y:y} ...]\n\tif (!appState.fExpressionPoints) {\n\t\tfuncExpressionPoints();\n\t}\n\tfor (let i = 0; i < appState.fExpressionPoints.length; i++) {\n\t\tstr += `<div>(${appState.fExpressionPoints[i].x}, ${appState.fExpressionPoints[i].y})</div>`;\n\t}\n\tsetGridTemplates();\n\tgridContainer.innerHTML =\n\t\t`<div class=\"header\">Function ${appState.funcExpression} contains the following points</div>` + str;\n\n\t// renderPolygon(appState.Fpoints);\n\t// canvasGraph.clearRect(0, 0, W, H);\n\n\t// render function from OxyRange.x.min to OxyRange.x.max based on appState.funcExpression\n\tbezierCurve(funcExpressionPoints());\n\t// bezierCurve(appState.Fpoints, 1, 'blue');\n\t// bezierCurve(appState.Fpoints);\n\tif (!canvasGraph.style.opacity) {\n\t\tcanvasGraph.style.opacity = 1;\n\t}\n\tif (!gridContainer.style.opacity) {\n\t\tgridContainer.style.opacity = '1';\n\t}\n\ttoggleGraphCanvas(true);\n\tappState.graphRendered = true;\n};\n\n// onclick over (x, y) coordinate pair displayed for function graph coordinates\nfunction renderFuncPointOrGraph(evt) {\n\tlet str = evt.target.innerText;\n\tlet m;\n\tif (str.match(/\\s*Function/)) {\n\t\tcanvasTopGraph.style.opacity = canvasTopGraph.style.opacity === '0' ? '1' : '0';\n\t\trenderFuncPolygon(appState.Fpoints, 10, 'yellow', 'destination-over', ctxTopGraph);\n\t} else if ((m = str.match(/\\s*(-?[0-9.]+)/g))) {\n\t\t// let xy = str.replace(/[()]/g, '').split(',');\n\t\tctxGraph.globalCompositeOperation = 'source-over';\n\t\trenderPoints(\n\t\t\t4,\n\t\t\t'blue',\n\t\t\t2,\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tx: +m[0],\n\t\t\t\t\ty: +m[1]\n\t\t\t\t}\n\t\t\t],\n\t\t\tctxGraph\n\t\t);\n\t}\n}\n\n// expands coordinate by gridCellSize\n// uses gco: globalCompositeOperation\nfunction renderFuncPolygon(points, lineWidth, color, gco, ctxTop) {\n\tlet pts = [];\n\tfor (let i = 0; i < points.length; i++) {\n\t\tpts.push({\n\t\t\tx: ACG.OxyTranslated.x + points[i].x * ACG.gridCellSize,\n\t\t\ty: ACG.OxyTranslated.y - points[i].y * ACG.gridCellSize\n\t\t});\n\t}\n\trenderPixelPolygon(ctxTop || ctxGraph, pts, lineWidth, color, gco);\n}\n\nfunction renderGrid() {\n\trenderOxy();\n\tctxGrid.clearRect(0, 0, W, H);\n\tlet celldim = ACG.gridCellSize;\n\n\t// let hLines = Math.round(H / celldim);\n\tctxGrid.beginPath();\n\tctxGrid.strokeStyle = 'lightgray';\n\n\tlet HH = H - 20; // for grid vertical lines bottom Y coordinate\n\tlet WW = W - 20; // for grid horizontal lines right end X coordinate\n\tlet tx = ACG.OxyTranslated.x, // Oy position from the left\n\t\tty = ACG.OxyTranslated.y; // Ox position from top\n\n\tctxGrid.font = '12px serif';\n\tctxGrid.fillStyle = 'black';\n\n\t// vertical line right of Oy axis\n\tlet vRLines = Math.round((W - tx) / celldim);\n\tOxySpan.x.max = vRLines - 1;\n\tACG.xAxisRange.max = vRLines - 1;\n\tfor (let i = 1; i < vRLines; i++) {\n\t\tctxGrid.moveTo(tx + i * celldim, 20);\n\t\tctxGrid.lineTo(tx + i * celldim, HH);\n\t\tif (i < vRLines - 1) {\n\t\t\tctxGrid.fillText(i, tx + i * celldim + 1, ty + 12);\n\t\t}\n\t}\n\n\tctxGrid.fillText(0, tx + 1, ty + 12);\n\n\t// vertical line left of Oy axis\n\tlet vLLines = Math.round(tx / celldim);\n\tOxySpan.x.min = -vLLines + 1;\n\tACG.xAxisRange.min = -vLLines;\n\n\tfor (let i = 1; i < vLLines; i++) {\n\t\tctxGrid.moveTo(tx - i * celldim, 20);\n\t\tctxGrid.lineTo(tx - i * celldim, HH);\n\n\t\tctxGrid.fillText(-i, tx - i * celldim + 1, ty + 12);\n\t}\n\n\t// horizontal top horizontal lines above Ox axis\n\tlet hTLines = Math.round(ty / celldim); // # of horizontal top lines\n\tOxySpan.y.max = hTLines - 1;\n\tfor (let i = 1; i < hTLines; i++) {\n\t\t// above the Ox axis\n\t\tctxGrid.moveTo(20, ty - i * celldim);\n\t\tctxGrid.lineTo(WW, ty - i * celldim);\n\n\t\tctxGrid.fillText(i, tx + 5, ty - i * celldim + 6);\n\t}\n\t// horizontal lines below the Ox axis\n\tlet hBLines = Math.round((H - ty) / celldim); // # of horizontal top lines\n\tOxySpan.y.min = -hBLines + 1;\n\tfor (let i = 1; i <= hBLines; i++) {\n\t\t// above the Ox axis\n\t\tctxGrid.moveTo(20, ty + i * celldim);\n\t\tctxGrid.lineTo(WW, ty + i * celldim);\n\n\t\tctxGrid.fillText(-i, tx + 5, ty + i * celldim + 6);\n\t}\n\tctxGrid.stroke();\n\tappState.gridRendered = true;\n\ttoggleGrid();\n\t// appState.actions.renderGrid = renderGrid;\n}\n\n// first point's [k,b] is held in appState.lineParams\nfunction renderLinesCrossPoint(k2, b2, funcExp, evt) {\n\tlet [ k1, b1 ] = appState.lineParams;\n\tif (k1 === k2) {\n\t\treturn;\n\t}\n\t// solutin for from y1(x)=y2(x) => k1*x + b1 = k2*x +b2 => x=(b2-b1)/(k1-k2);\n\tlet x = round((b2 - b1) / (k1 - k2), 4);\n\tlet y = round(funcExp(x), 4);\n\n\trenderPoints(\n\t\t3,\n\t\t'red',\n\t\t3,\n\t\t[\n\t\t\t{\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t}\n\t\t],\n\t\tctxGraph\n\t);\n\tlet cellSize = ACG.gridCellSize;\n\tlet t = ACG.OxyTranslated;\n\tlet tleft = round(x * cellSize + t.x, 1) + 40;\n\tlet ttop = round(t.y - y * cellSize, 1) - 10;\n\tlet ttip = tooltip.cloneNode(true);\n\tctxGraph.tooltips.push(ttip);\n\tdocument.body.appendChild(ttip);\n\tttip.style.left = `${tleft}px`;\n\tttip.style.top = `${ttop}px`;\n\t// get discrepancy when using evt.clientY - h - marginT\n\tttip.innerHTML = `<span style='font-size:14px;color:yellow'>X(${x}, ${y})</span>`;\n\t// <span style='font-size:10px;color:yellow'> &nbsp; (${tleft}, ${ttop})</span>`;\n\tconsole.log(`x=${x}`);\n\tconsole.log(`1st line: y(${x}) = ${k1}*${x} + ${b1} = ${round(k1 * x + b1, 4)}`);\n\tconsole.log(`2nd line: y(${x}) = ${k2}*${x} + ${b2} = ${round(k2 * x + b2, 4)}`);\n\tttip.style.opacity = '1'; // make ttip visible\n\tttip['permanent'] = true;\n}\n\n// render line accross the whole canvas through points selected by Ctrl+Click\nfunction renderLineByTwoPoints(x, y) {\n\tlet elval = el('#twoPoints').value;\n\t// if (elval.split('(').length > 2) {\n\t// extract left and right part to get '(x1,y1' and 'x2,y2)' with half parentheses\n\tlet pts = el('#twoPoints').value.replace(/\\s{2,}/g, ' ').split(') (');\n\t// extract x,y coordinates by destructuring splitted values\n\tlet [ x1, y1 ] = pts[0].replace(/[()]/g, '').split(',');\n\tlet [ x2, y2 ] = pts[1].replace(/[()]/g, '').split(',');\n\n\t// x1,y2 and x2,y2 are still strings\n\tlet k = round((y2 - y1) / (x2 - x1), 3);\n\tlet b = round(y2 - k * x2, 3);\n\tlet sgn = b > 0 ? '+' : '';\n\tlet rhs = `${k}*x ${sgn} ${b}`;\n\tif (!b) {\n\t\tb = '+';\n\t}\n\t// get functin expression for linear fuction\n\tlet fexpr = funcExpression(`y(x) = ${rhs}`);\n\n\tel(\n\t\t'.line-equation'\n\t).innerHTML += `<br><span style='margin-left:1rem;color:blue'>${elval} equation: y(x) = ${rhs}</span>`;\n\n\t// ACG.xAxisRange holds the range of Ox axis to allow the line\n\t// to take values over the whole range and render accross the whole canvas\n\tlet rx = ACG.xAxisRange;\n\tlet points = [\n\t\t{\n\t\t\tx: rx.min,\n\t\t\ty: round(fexpr(rx.min), 2)\n\t\t},\n\t\t{\n\t\t\tx: rx.max,\n\t\t\ty: round(fexpr(rx.max), 2)\n\t\t}\n\t];\n\t// rendering line througn two given points\n\tbezierCurve(points, 1, 'green', 0, 1);\n\n\tif (appState.lineParams) {\n\t\t// inclination k and y=y(0) Oy cross point\n\t\trenderLinesCrossPoint(k, b, fexpr);\n\t\tappState.lineParams = '';\n\t\tel('#twoPoints').value = '';\n\t}\n\tappState.lineParams = [ k, b ];\n\t// }\n}\n\nfunction renderOxy() {\n\t// translateToOxy(ctx);\n\tif (ACG.OxyTranslated.x == null) {\n\t\tadjustGridMesh();\n\t}\n\tlet Ox = ACG.OxyTranslated.x;\n\tlet Oy = ACG.OxyTranslated.y;\n\n\tlet oy = [\n\t\t{\n\t\t\tx: Ox,\n\t\t\ty: 0\n\t\t},\n\t\t{\n\t\t\tx: Ox + 4,\n\t\t\ty: 8\n\t\t},\n\t\t{\n\t\t\tx: Ox - 4,\n\t\t\ty: 8\n\t\t},\n\t\t{\n\t\t\tx: Ox,\n\t\t\ty: 0\n\t\t},\n\t\t{\n\t\t\tx: Ox,\n\t\t\ty: H\n\t\t}\n\t];\n\t// horizontal grid lines\n\tlet ox = [\n\t\t{\n\t\t\tx: 0,\n\t\t\ty: Oy\n\t\t},\n\t\t{\n\t\t\tx: W,\n\t\t\ty: Oy\n\t\t},\n\t\t{\n\t\t\tx: W - 8,\n\t\t\ty: Oy + 4\n\t\t},\n\t\t{\n\t\t\tx: W - 8,\n\t\t\ty: Oy - 4\n\t\t},\n\t\t{\n\t\t\tx: W,\n\t\t\ty: Oy\n\t\t}\n\t];\n\n\tctx.clearRect(0, 0, W, H);\n\t// to accept a new color\n\tctx.beginPath();\n\tctx.strokeStyle = 'gray';\n\tctx.translate(0.5, 0.5);\n\trenderPixelPolygon(ctx, oy);\n\t// ctxDots.beginPath();\n\t// ctxDots.moveTo(3000, 3000);\n\t// ctxDots.lineTo(3001, 3000);\n\t// ctxDots.stroke();\n\trenderPixelPolygon(ctx, ox);\n\n\t// ctx.moveTo(w, h);\n\t// ctx.arc(w, Oy, 2, 0, 2 * Math.PI);\n\t// ctx.stroke();\n\tctx.font = '20px serif';\n\tctx.fillStyle = 'gray';\n\tctx.fillText('O', Ox - 25, Oy + 20); // render O for Oxy\n\tctx.fillText('y', Ox + 10, marginT); // render y for Oxy\n\tctx.fillText('x', W - 20, Oy + 16); // render x for Oxy\n\n\tcanvasGrid.style.opacity = checkboxGrid.checked ? '1' : '0';\n\tctx.stroke();\n}\n\n// canvas is prone to misguiding position when translateToOxy is\n// called more than once. It applies translate over and over\n// so canvas got 'translated' flag to allow only single translate\n// so for new kind of translate the flag shoud be cleared, i.e. set to false\nfunction renderPoints(diameter, color, lineWidth, points, ctx) {\n\tctx = ctx || ctxGraph;\n\tctx.globalCompositeOperation = 'source-over';\n\tlet celldim = ACG.gridCellSize;\n\tif (!points) {\n\t\tpoints = appState.userPoints || getPoints();\n\t}\n\tctx.beginPath();\n\tctx.strokeStyle = color || '#ff0000';\n\tctx.lineWidth = lineWidth || 2;\n\n\tfor (let i = 0; i < points.length; i++) {\n\t\tlet [ x, y ] = [ ACG.OxyTranslated.x + points[i].x * celldim, ACG.OxyTranslated.y - points[i].y * celldim ];\n\t\tctx.moveTo(x, y);\n\t\tctx.arc(x, y, diameter || 2, 0, 2 * Math.PI);\n\t}\n\tctx.stroke();\n\tif (canvasGraph.style.opacity !== '1') {\n\t\tcanvasGraph.style.opacity = 11;\n\t}\n}\n\n// uses coordinates that has to be scalled to pixels to render in canvas\n// function renderPolygon(points) {\n// \tctxGraph.clearRect(0, 0, W, H);\n// \tlet celldim = appState.gridCellSize;\n// \tctxGraph.beginPath();\n// \tctxGraph.moveTo(points[0].x * celldim, points[0].y * celldim);\n// \tfor (let i = 0; i < 5; i++) {\n// \t\t//points.length; i++) {\n// \t\tctxGraph.lineTo(w + points[i].x * celldim, h - points[i].y * celldim);\n// \t}\n// \tctxGraph.stroke();\n// }\n\n// uses ready calculated pixel positon to render polygon, no scaling needed\n// uses gco: globalCompositeOperation\nfunction renderPixelPolygon(ctx, points, lineWidth, color, gco) {\n\t// translateToOxy(ctx);\n\tctx.beginPath();\n\tctx.lineWidth = lineWidth || 1;\n\tctx.strokeStyle = color || 'black';\n\tif (gco) {\n\t\tctx.globalCompositeOperation = gco;\n\t}\n\tctx.moveTo(points[0].x, points[0].y);\n\tfor (let i = 0; i < points.length; i++) {\n\t\tctx.lineTo(points[i].x, points[i].y);\n\t}\n\tctx.stroke();\n}\n\nexport const toggleGraphCanvas = (vboolean) => {\n\tif (vboolean === undefined) {\n\t\t// if checkbox event was raised\n\t\tvboolean = el('#funcPoints').checked;\n\t} else {\n\t\tel('#funcPoints').checked = vboolean;\n\t}\n\tcanvasGraph.style.opacity = gridContainer.style.opacity = vboolean ? 1 : 0;\n\tctxGraph.tooltips.forEach((tt) => {\n\t\ttt.style.opacity = vboolean ? 1 : 0;\n\t});\n};\n\nexport const toggleGrid = () => {\n\tlet style = el('#canvasGrid').style;\n\tif (checkboxGrid.checked) {\n\t\tif (!appState.gridRendered && appState.userPoints) {\n\t\t\trenderGrid();\n\t\t}\n\t\tstyle.opacity = '1';\n\t} else {\n\t\tstyle.opacity = '0';\n\t}\n};\n\n// by pressing the points button, so here we collect the points\nexport const toggleRenderPoints = (diameter, color, lineWidth) => {\n\tlet cbox = el('#renderPoints');\n\tif (cbox.checked) {\n\t\tif (!appState.pointsRendered || userPointStringChanged()) {\n\t\t\trenderPoints(diameter, color, lineWidth, null, ctxDots);\n\t\t\tappState.pointsRendered = true;\n\t\t}\n\t\tcanvasDots.style.opacity = '1';\n\t} else {\n\t\tcanvasDots.style.opacity = '0';\n\t}\n};\n\n// function translateToOxy(ctx) {\n// \t// return;\n// \tif (ctx['translated'] || ACG.OxyTranslated.x == null) {\n// \t\treturn;\n// \t}\n// \tctx.translate(ACG.OxyTranslated.x - W / 2, ACG.OxyTranslated.y - H / 2);\n// \tctx['translated'] = true;\n// }\n\nfunction setFyRanges(fExpression) {\n\tACG.FyRanges = {\n\t\tmin: Infinity,\n\t\tmax: -Infinity,\n\t\tyMinMax: 0\n\t};\n\tlet x = ACG.xyPointsRanges.x.min;\n\tlet delta = (ACG.xyPointsRanges.x.max - ACG.xyPointsRanges.x.min) / 20;\n\tlet y;\n\tfor (let i = 0; i < 20; i++) {\n\t\ty = fExpression(x);\n\t\tif (ACG.FyRanges.min > y) {\n\t\t\tACG.FyRanges.min = y;\n\t\t}\n\t\tif (ACG.FyRanges.max < y) {\n\t\t\tACG.FyRanges.max = y;\n\t\t}\n\t\tx += delta;\n\t}\n\tACG.FyRanges.yMinMax = ACG.FyRanges.max - ACG.FyRanges.min;\n}\n\n// mousedown and hold on a canvas grid we display point coordinates in a tooltip like pill\nfunction showCoordinates(evt) {\n\tif (isOutsideOfCanvas(evt)) {\n\t\treturn;\n\t}\n\tlet delta = 0.3;\n\t// set tooltip on the right of the mousedown point\n\tlet cellSize = ACG.gridCellSize;\n\n\tlet x = round((evt.clientX - ACG.OxyTranslated.x - canvas.offsetLeft + window.scrollX) / cellSize, 1);\n\tlet y = -round((evt.clientY - ACG.OxyTranslated.y - canvas.offsetTop + window.scrollY) / cellSize, 1);\n\ttooltip.style.backgroundColor = 'navy';\n\tfor (let i = 0; i < appState.userPoints.length; i++) {\n\t\tlet p = appState.userPoints[i];\n\t\tif (Math.abs(Math.abs(x) - Math.abs(p.x)) < delta && Math.abs(Math.abs(y) - Math.abs(p.y)) < delta) {\n\t\t\tsetTooltip(p.x, p.y, evt, 2000);\n\t\t\treturn;\n\t\t}\n\t}\n\tif (evt.ctrlKey) {\n\t\tel('#funcPoints').checked = true;\n\n\t\trenderPoints(\n\t\t\t3,\n\t\t\t'green',\n\t\t\t3,\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tx: x,\n\t\t\t\t\ty: y\n\t\t\t\t}\n\t\t\t],\n\t\t\tctxGraph\n\t\t);\n\n\t\t// enter selected point into input field and when it gets two points\n\t\t// render a line through them\n\t\tif (el('#twoPoints').value.split('(').length === 2) {\n\t\t\tel('#twoPoints').value += `( ${x}, ${y}) `;\n\t\t\trenderLineByTwoPoints(x, y, evt);\n\t\t} else {\n\t\t\t//if (el('#twoPoints').value.split('(').length < 2) {\n\t\t\tel('#twoPoints').value = `( ${x}, ${y}) `;\n\t\t}\n\t} else {\n\t\tsetTooltip(x, y, evt);\n\t}\n}\n\n// if user changed input points everything should be adjusted, shrinked or expanded\nfunction userPointStringChanged() {\n\tif (appState.userPointsString !== el('#pointsList').value) {\n\t\tgetPoints();\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n// // to show point coordinates we mousedown and hold n canvas but resolve values up to .5\n// function roundTo05(x) {\n// \tlet delta = 0;\n// \tlet rest = (x - Math.floor(x)) % 10;\n// \tif (rest > 0.7) {\n// \t\tdelta = 1;\n// \t} else if (rest > 0.3) {\n// \t\tdelta = 0.5;\n// \t}\n// \tx = Math.floor(x) + delta;\n// \treturn x;\n// }\n\nfunction setTooltip(x, y, evt, time) {\n\ttooltip.style.left = `${evt.clientX + marginL - window.scrollX}px`;\n\ttooltip.style.top = `${evt.clientY - marginT + window.scrollY}px`;\n\t// get discrepancy when using evt.clientY - h - marginT\n\ttooltip.innerHTML = `P(${x}, ${y})</span>`;\n\ttooltip.style.backgroundColor = time ? 'red' : 'navy';\n\t// <span style='font-size:10px;color:yellow'> &nbsp; (${evt.clientX}, ${evt.clientY})  cell ${ACG.gridCellSize}</span>`;\n\n\tif (time) {\n\t\tappState.tooltipTimeout = true;\n\t\tsetTimeout(() => {\n\t\t\ttooltip.style.opacity = '0';\n\t\t\tappState.tooltipTimeout = false;\n\t\t\ttooltip.style.backgroundColor = 'navy';\n\t\t}, time);\n\t}\n\ttooltip.style.opacity = '1'; // make tooltip visible\n}\n\nfunction hideCoordinates(evt) {\n\tif (tooltip['permanent'] || appState.tooltipTimeout) {\n\t\treturn;\n\t}\n\ttooltip.style.opacity = '0';\n}\n\n// when definind grid-template-columns: 1fr 1fr 1fr\n// and dynamic number of rows based on number of points that user specified\n// grid-termplate-rows: auto auto auto ...\nfunction repeate(str, num) {\n\tlet s = '';\n\tfor (let i = 0; i < num; i++) {\n\t\ts += str;\n\t}\n\treturn s;\n}\n\n// show function points (x, f(x)) in GRID_COLUMNS columns and calculate\n// how many rows are necessary to dipsplay all the points\nfunction setGridTemplates() {\n\tlet gridStyle = gridContainer.style;\n\tgridStyle.gridTemplateColumns = repeate('1fr ', GRID_COLUMNS);\n\tgridStyle.gridTemplateRows = repeate('auto ', 1 + Math.ceil(funcExpressionPoints.length / GRID_COLUMNS));\n}\n","import React from 'react';\n\n// import { onLoad } from './canvas.jsx';\n\nfunction Canvases(props) {\n\t// setTimeout(() => {\n\t// \tonLoad();\n\t// \tconsole.log('setTimeout', 'onLoad');\n\t// }, 300);\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<canvas id=\"canvas\" width=\"600\" height=\"400\" className=\"canvas2\">\n\t\t\t\tYour browser does not support the canvas element.\n\t\t\t</canvas>\n\t\t\t<canvas id=\"canvasDots\" width=\"600\" height=\"400\" className=\"canvas5\" />\n\t\t\t<canvas id=\"canvasGrid\" width=\"600\" height=\"400\" className=\"canvas3\" />\n\t\t\t<canvas id=\"canvasGraph\" width=\"600\" height=\"400\" className=\"canvas2\" />\n\t\t\t<canvas id=\"canvasTopGraph\" width=\"600\" height=\"400\" className=\"canvas4\" />\n\t\t</div>\n\t);\n}\nexport default Canvases;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport Canvases from './Canvases';\nimport './AppCanvas.css';\n\nimport {\n\tchangeStudentName,\n\ttoggleGrid,\n\ttoggleRenderPoints,\n\trenderFuncPoints,\n\ttoggleGraphCanvas,\n\tonLoad\n} from './canvas.jsx';\n\n// CSS file\n\nconst pointsStringChanged = () => {\n\tconsole.log('pointsStringChanged');\n};\nconst funcExpStringChanged = () => {\n\tconsole.log('funcExpStringChanged');\n};\n// const changeStudent_Name = () => {\n// \tconsole.log('changeStudentName');\n// };\n\nfunction App() {\n\tsetTimeout(() => {\n\t\tonLoad();\n\t}, 400);\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Canvases />>\n\t\t\t<div id=\"tooltip\" className=\"tooltip\" />\n\t\t\t<div className=\"student-name\" onClick={changeStudentName}>\n\t\t\t\tMarko Milutinovic\n\t\t\t</div>\n\t\t\t<div id=\"commands\" className=\"commanda\" />\n\t\t\t<label htmlFor=\"pointsList\">User defined points</label>\n\t\t\t<br />\n\t\t\t<input\n\t\t\t\tid=\"pointsList\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"User defined points, like -2,-4 1,1 3,4\"\n\t\t\t\tonChange={pointsStringChanged}\n\t\t\t\tdefaultValue=\"-16,-6 -3,1 -2,-1 0,-2 1,1 2,-1 3,4 16,7\"\n\t\t\t/>\n\t\t\t<input type=\"checkbox\" id=\"renderPoints\" onClick={() => toggleRenderPoints()} />points\n\t\t\t<input\n\t\t\t\tid=\"checkboxGrid\"\n\t\t\t\tonClick={() => toggleGrid()}\n\t\t\t\tonChange={() => {}}\n\t\t\t\tdefaultChecked={true}\n\t\t\t\ttype=\"checkbox\"\n\t\t\t/>grid\n\t\t\t<input type=\"text\" id=\"twoPoints\" />\n\t\t\t<br />\n\t\t\t<span className=\"line-equation\">Line equation</span>\n\t\t\t<p className=\"p-title\">The function equation uses x values entered above to calculate y values</p>\n\t\t\t<input\n\t\t\t\tid=\"funcExpression\"\n\t\t\t\tonChange={funcExpStringChanged}\n\t\t\t\tplaceholder=\"y(x) = x - 1\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tdefaultValue=\"y(x) = Math.sin(x)\"\n\t\t\t/>\n\t\t\t<button onClick={() => renderFuncPoints()}>render</button>\n\t\t\t<input type=\"checkbox\" id=\"funcPoints\" onClick={() => toggleGraphCanvas()} />toggle graph\n\t\t\t<div id=\"gridContainer\" className=\"grid-container\" />\n\t\t\t<br />\n\t\t</React.Fragment>\n\t);\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './TodoApp';\n// import App from './App';\nimport App from './canvas/AppCanvas';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}